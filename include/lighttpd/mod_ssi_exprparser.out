 State 0:
          input ::= * exprline
          exprline ::= * expr cond expr
          exprline ::= * expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * NOT expr
          expr ::= * LPARAN exprline RPARAN
          expr ::= * value
          value ::= * VALUE
          value ::= * value VALUE

                           NOT shift  9
                        LPARAN shift  11
                         VALUE shift  16
                          expr shift  2
                         value shift  14
                      exprline shift  1
                         input accept

State 1:
      (0) input ::= exprline *

                             $ reduce 0

State 2:
          exprline ::= expr * cond expr
      (2) exprline ::= expr *
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          cond ::= * EQ
          cond ::= * NE
          cond ::= * LE
          cond ::= * GE
          cond ::= * LT
          cond ::= * GT

                           AND shift  5
                            OR shift  7
                            EQ shift  17
                            NE shift  18
                            GT shift  22
                            GE shift  20
                            LT shift  21
                            LE shift  19
                          cond shift  3
                     {default} reduce 2

State 3:
          exprline ::= expr cond * expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * NOT expr
          expr ::= * LPARAN exprline RPARAN
          expr ::= * value
          value ::= * VALUE
          value ::= * value VALUE

                           NOT shift  9
                        LPARAN shift  11
                         VALUE shift  16
                          expr shift  4
                         value shift  14

State 4:
      (1) exprline ::= expr cond expr *
          expr ::= expr * AND expr
          expr ::= expr * OR expr

                           AND shift  5
                            OR shift  7
                     {default} reduce 1

State 5:
          expr ::= * expr AND expr
          expr ::= expr AND * expr
          expr ::= * expr OR expr
          expr ::= * NOT expr
          expr ::= * LPARAN exprline RPARAN
          expr ::= * value
          value ::= * VALUE
          value ::= * value VALUE

                           NOT shift  9
                        LPARAN shift  11
                         VALUE shift  16
                          expr shift  6
                         value shift  14

State 6:
          expr ::= expr * AND expr
      (3) expr ::= expr AND expr *
          expr ::= expr * OR expr

                            OR shift  7
                     {default} reduce 3

State 7:
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= expr OR * expr
          expr ::= * NOT expr
          expr ::= * LPARAN exprline RPARAN
          expr ::= * value
          value ::= * VALUE
          value ::= * value VALUE

                           NOT shift  9
                        LPARAN shift  11
                         VALUE shift  16
                          expr shift  8
                         value shift  14

State 8:
          expr ::= expr * AND expr
          expr ::= expr * OR expr
      (4) expr ::= expr OR expr *

                     {default} reduce 4

State 9:
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * NOT expr
          expr ::= NOT * expr
          expr ::= * LPARAN exprline RPARAN
          expr ::= * value
          value ::= * VALUE
          value ::= * value VALUE

                           NOT shift  9
                        LPARAN shift  11
                         VALUE shift  16
                          expr shift  10
                         value shift  14

State 10:
          expr ::= expr * AND expr
          expr ::= expr * OR expr
      (5) expr ::= NOT expr *

                     {default} reduce 5

State 11:
          exprline ::= * expr cond expr
          exprline ::= * expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * NOT expr
          expr ::= * LPARAN exprline RPARAN
          expr ::= LPARAN * exprline RPARAN
          expr ::= * value
          value ::= * VALUE
          value ::= * value VALUE

                           NOT shift  9
                        LPARAN shift  11
                         VALUE shift  16
                          expr shift  2
                         value shift  14
                      exprline shift  12

State 12:
          expr ::= LPARAN exprline * RPARAN

                        RPARAN shift  13

State 13:
      (6) expr ::= LPARAN exprline RPARAN *

                     {default} reduce 6

State 14:
      (7) expr ::= value *
          value ::= value * VALUE

                         VALUE shift  15
                     {default} reduce 7

State 15:
      (9) value ::= value VALUE *

                     {default} reduce 9

State 16:
      (8) value ::= VALUE *

                     {default} reduce 8

State 17:
     (10) cond ::= EQ *

                     {default} reduce 10

State 18:
     (11) cond ::= NE *

                     {default} reduce 11

State 19:
     (12) cond ::= LE *

                     {default} reduce 12

State 20:
     (13) cond ::= GE *

                     {default} reduce 13

State 21:
     (14) cond ::= LT *

                     {default} reduce 14

State 22:
     (15) cond ::= GT *

                     {default} reduce 15

